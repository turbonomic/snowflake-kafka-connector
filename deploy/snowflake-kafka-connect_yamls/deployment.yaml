apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowflake-kafka-connect
  labels:
    app.kubernetes.io/name: snowflake-kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: snowflake-kafka-connect
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snowflake-kafka-connect
    spec:
      containers:
      - name: snowflake-kafka-connect
        image: turbonomic/snowflake-kafka-connect
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: /tmp/logs
        - name: KAFKA_OPTS
          value: >-
                  -Dhttp.useProxy=true -Dhttps.useProxy=true
                  -Dhttp.proxyHost=<proxyHost> -Dhttp.proxyPort=<proxyPort>
                  -Dhttps.proxyHost=<proxyHostHTTPS> -Dhttps.proxyPort=<proxyPortHTTPS>
                  -Dhttp.proxyUser=<ProxyUser> -Dhttp.proxyPassword=<ProxyPassword>
                  -Dhttps.proxyUser=<ProxyUserHTTPS> -Dhttps.proxyPassword=<ProxyPasswordHTTPS>
        ports:
        - name: http
          containerPort: 8083
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8083
        resources:
          limits:
            memory: 2Gi
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - mountPath: /tmp
          name: snowflake-tmpfs0
      - name: exporter
        image: turbonomic/exporter
        imagePullPolicy: IfNotPresent
#        args:
#        - --namespace=customer
#        - --mode=stdout
#        - --loglevel=DEBUG
        resources:
          limits:
            memory: 12Gi
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - mountPath: /tmp
          name: snowflake-tmpfs0
      volumes:
      - name: snowflake-tmpfs0
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: snowflake-kafka-connect
  labels:
    app.kubernetes.io/name: snowflake-kafka-connect
spec:
  ports:
  - name: http-snowflake-kafka-connect
    port: 8083
  selector:
    app.kubernetes.io/name: snowflake-kafka-connect
